<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4dd75353-39b3-45fe-bbf3-c9665db43041" name="Changes" comment="Добавлен выбор и поддержка русского и английского языка из property файлов&#10;&#10;добавлено меню для выбора языка - MainMenu.language&#10;добавлена утилита BookUtils для вывода списка всех книг с учетом локали&#10;Реализован выбор сообщений на 2 языках с помощью класса MessageSource и 4 properties файла в 2 группы">
      <change afterPath="$PROJECT_DIR$/src/main/resources/color.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/config/AppConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/config/AppConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/BookInputHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/BookInputHandler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/MainMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/MainMenu.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/Book.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/Book.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/service/BookService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/service/BookService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/utils/BookUtils.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/utils/BookUtils.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Itexus-books" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Itexus-books" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Itexus-books" type="f1a62948:ProjectNode" />
                <item name="Dependencies" type="6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Pull.Settings">
    <option name="OPTIONS">
      <set>
        <option value="FF_ONLY" />
      </set>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2mFQ4iWqAU9Xw5dkIhEVzDX7bk2" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;database.data.extractors.current.export.id&quot;: &quot;Comma-separated (CSV)_id&quot;,
    &quot;database.data.extractors.current.id&quot;: &quot;Comma-separated (CSV)_id&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Problems&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.24620306&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.42875317&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.github.evgenys91.machinet.common.settings.AppSettingsConfigurable&quot;,
    &quot;spring.configuration.checksum&quot;: &quot;ac44b2ac458e8730ee368923faff3492&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="Push.Settings">
    <option name="SHOW_DETAILS_PANEL" value="false" />
  </component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="org.example1" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\java\IdeaProjects\Itexus-books\src\main\resources" />
      <recent name="C:\java\IdeaProjects\Itexus-books\src\main\resources\properties" />
    </key>
  </component>
  <component name="RunManager" selected="Application.Books">
    <configuration name="Books" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.Books" />
      <module name="Itexus-books.main" />
      <option name="VM_PARAMETERS" value="-Dconsole.encoding=UTF-8 -Dfile.encoding=UTF-8" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MainMenu" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.MainMenu" />
      <module name="Itexus-books.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Menu" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.controller.Menu" />
      <module name="Itexus-books.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.model.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReadBooksFromCSV" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.ReadBooksFromCSV" />
      <module name="Itexus-books.main" />
      <option name="VM_PARAMETERS" value="-Dfile.encoding=UTF-8" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.model.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.Test" />
      <module name="Itexus-books.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Test" />
      <item itemvalue="Application.MainMenu" />
      <item itemvalue="Application.Books" />
      <item itemvalue="Application.Menu" />
      <item itemvalue="Application.ReadBooksFromCSV" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Test" />
        <item itemvalue="Application.MainMenu" />
        <item itemvalue="Application.Books" />
        <item itemvalue="Application.Menu" />
        <item itemvalue="Application.ReadBooksFromCSV" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SpringBeansView">
    <option name="beanDetailsProportion" value="0.3" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4dd75353-39b3-45fe-bbf3-c9665db43041" name="Changes" comment="" />
      <created>1726669661154</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1726669661154</updated>
      <workItem from="1726669662556" duration="12396000" />
      <workItem from="1726686637765" duration="2691000" />
      <workItem from="1726815121965" duration="4448000" />
      <workItem from="1726841914179" duration="33294000" />
      <workItem from="1726984136279" duration="11500000" />
      <workItem from="1727028497024" duration="1766000" />
      <workItem from="1727077632700" duration="16905000" />
      <workItem from="1727166318149" duration="3877000" />
      <workItem from="1727245826689" duration="2403000" />
      <workItem from="1727339438086" duration="5810000" />
      <workItem from="1727366027918" duration="10271000" />
      <workItem from="1727463624061" duration="2649000" />
      <workItem from="1727506941813" duration="5826000" />
      <workItem from="1727517500209" duration="2260000" />
      <workItem from="1727520644687" duration="6248000" />
      <workItem from="1727593907250" duration="29541000" />
      <workItem from="1727685666738" duration="654000" />
      <workItem from="1728381179095" duration="26538000" />
      <workItem from="1728631286468" duration="4164000" />
      <workItem from="1728908832288" duration="22117000" />
    </task>
    <task id="LOCAL-00001" summary="Initial commit">
      <created>1727095638353</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1727095638353</updated>
    </task>
    <task id="LOCAL-00002" summary="Добавлен выбор и поддержка русского и английского языка из property файлов&#10;&#10;добавлено меню для выбора языка - MainMenu.language&#10;добавлена утилита BookUtils для вывода списка всех книг с учетом локали&#10;Реализован выбор сообщений на 2 языках с помощью класса MessageSource и 4 properties файла в 2 группы">
      <created>1727641825169</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1727641825169</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial commit" />
    <MESSAGE value="Добавлен выбор и поддержка русского и английского языка из property файлов&#10;&#10;добавлено меню для выбора языка - MainMenu.language&#10;добавлена утилита BookUtils для вывода списка всех книг с учетом локали&#10;Реализован выбор сообщений на 2 языках с помощью класса MessageSource и 4 properties файла в 2 группы" />
    <option name="LAST_COMMIT_MESSAGE" value="Добавлен выбор и поддержка русского и английского языка из property файлов&#10;&#10;добавлено меню для выбора языка - MainMenu.language&#10;добавлена утилита BookUtils для вывода списка всех книг с учетом локали&#10;Реализован выбор сообщений на 2 языках с помощью класса MessageSource и 4 properties файла в 2 группы" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
  <component name="com.github.evgenys91.machinet.common.dslhistory.DslHistoryState">
    <option name="historyDtoById">
      <map>
        <entry key="9c2957">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/src/main/java/org/example/controller/MainMenu.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/service/BookService.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/utils/BookUtils.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/controller/BookInputHandler.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/model/Book.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/repository/BookRepository.java" />
                </list>
              </option>
              <option name="id" value="9c2957" />
              <option name="initiateTms" value="1728986181201" />
              <option name="request" value=" что нужно написать в аннотации @value над полем green чтоб присвоить в него значение color.green из файла color.property ?" />
              <option name="response" value="" />
              <option name="responseDescription" value="Для того чтобы присвоить значение из файла `color.property` в поле `green` с использованием аннотации `@Value`, нужно сделать следующее:&#10;&#10;1. Убедитесь, что файл `color.property` находится в пути, который Spring Boot автоматически сканирует для конфигурационных файлов (например, в `src/main/resources`).&#10;2. В файле `color.property` должно быть определено свойство `color.green`, например:&#10;   ```properties&#10;   color.green=\u001B[92m&#10;   ```&#10;&#10;3. В классе `MainMenu` добавьте аннотацию `@Value` над полем `green`:&#10;&#10;```java&#10;package org.example.controller;&#10;&#10;import lombok.RequiredArgsConstructor;&#10;import org.apache.commons.text.StringEscapeUtils;&#10;import org.example.service.BookService;&#10;import org.example.utils.BookUtils;&#10;import org.springframework.beans.factory.annotation.Value;&#10;import org.springframework.context.MessageSource;&#10;import org.springframework.stereotype.Controller;&#10;&#10;import javax.annotation.PostConstruct;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.util.Locale;&#10;&#10;/**&#10; * Класс {@code MainMenu} отвечает за отображение главного меню и обработку пользовательского ввода.&#10; */&#10;@Controller&#10;@RequiredArgsConstructor&#10;public class MainMenu {&#10;&#10;    private final BookService bookService;&#10;    private final BookInputHandler bookInputHandler;&#10;    private final MessageSource messageSource;&#10;&#10;    private String red;&#10;    private final String reset = &quot;\u001B[0m&quot;;&#10;&#10;    @Value(&quot;${color.green}&quot;)&#10;    private String green;&#10;    private final String yellow = &quot;\u001B[93m&quot;;&#10;&#10;    private Locale currentLocale = Locale.getDefault();&#10;&#10;    @PostConstruct&#10;    private void init() {&#10;        red = StringEscapeUtils.unescapeJava(red);&#10;        green = StringEscapeUtils.unescapeJava(green);&#10;    }&#10;&#10;    public void menu() {&#10;        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) {&#10;            language(reader);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;    }&#10;&#10;    /**&#10;     * Запускает меню выбора языка&#10;     */&#10;    public void language(BufferedReader reader) {&#10;        int input;&#10;        do {&#10;            System.out.println(green);&#10;            System.out.println(messageSource.getMessage(&quot;menu.language&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.option1&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.option2&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.exit&quot;, null, currentLocale));&#10;            System.out.println(reset);&#10;&#10;            try {&#10;                input = Integer.parseInt(reader.readLine());&#10;                switch (input) {&#10;                    case 1 -&gt; {&#10;                        currentLocale = new Locale(&quot;ru&quot;);&#10;                        run(reader);&#10;                    }&#10;                    case 2 -&gt; {&#10;                        currentLocale = Locale.ENGLISH;&#10;                        run(reader);&#10;                    }&#10;                    case 0 -&gt; System.out.println(messageSource.getMessage(&quot;menu.exitMessage&quot;, null, currentLocale));&#10;                    default -&gt; System.out.println(messageSource.getMessage(&quot;menu.invalid&quot;, null, currentLocale));&#10;                }&#10;            } catch (NumberFormatException e) {&#10;                System.out.println(messageSource.getMessage(&quot;menu.notNumber&quot;, null, currentLocale));&#10;                input = -1;&#10;            } catch (IOException e) {&#10;                throw new RuntimeException(e); //TODO доработать обработку ошибок&#10;            }&#10;        } while (input != 0);&#10;    }&#10;&#10;    /**&#10;     * Запускает главное меню и обрабатывает пользовательский ввод.&#10;     * Пользователь может выбрать одну из доступных операций или выйти из программы.&#10;     */&#10;    public void run(BufferedReader reader) {&#10;        int input;&#10;        do {&#10;            System.out.println(green);&#10;            System.out.println(messageSource.getMessage(&quot;menu.action&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.listBooks&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.createBook&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.editBook&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.deleteBook&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.exitAction&quot;, null, currentLocale));&#10;            System.out.println(reset);&#10;&#10;            try {&#10;                input = Integer.parseInt(reader.readLine());&#10;                switch (input) {&#10;                    case 1 -&gt; BookUtils.listBooks(bookService.readBooks(currentLocale), messageSource, currentLocale);&#10;                    case 2 -&gt; bookService.createBook(bookInputHandler.newBookDetails(currentLocale), currentLocale);&#10;                    case 3 -&gt; bookService.editBook(bookInputHandler.updateBookDetails(currentLocale), currentLocale);&#10;                    case 4 -&gt; bookService.deleteBook(bookInputHandler.deleteBookDetails(currentLocale), currentLocale);&#10;                    case 0 -&gt; System.out.println(messageSource.getMessage(&quot;menu.exitMessage&quot;, null, currentLocale));&#10;                    default -&gt;&#10;                            System.out.println(red + messageSource.getMessage(&quot;menu.invalid&quot;, null, currentLocale) + reset);&#10;                }&#10;            } catch (NumberFormatException e) {&#10;                System.out.println(red + messageSource.getMessage(&quot;menu.notNumber&quot;, null, currentLocale) + reset);&#10;                input = -1;&#10;            } catch (IOException e) {&#10;                throw new RuntimeException(e); //TODO доработать обработку ошибок&#10;            }&#10;        } while (input != 0);&#10;    }&#10;}&#10;```&#10;&#10;Теперь значение `color.green` из файла `color.property` будет автоматически присвоено полю `green` в классе `MainMenu`." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1728986197833" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/src/main/java/org/example/model/Book.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/controller/BookInputHandler.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/repository/BookRepository.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/service/BookService.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/utils/BookUtils.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/controller/MainMenu.java" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="f4250d">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/src/main/java/org/example/utils/BookUtils.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/model/Book.java" />
                </list>
              </option>
              <option name="id" value="f4250d" />
              <option name="initiateTms" value="1728994007731" />
              <option name="request" value=" почему метод listBooks выводит книги с null:&#10;nullID: null2, nullНазвание: nullПреступление и наказание, nullАвтор: nullФёдор Достоевский, &#10;что изменить в коде BookUtils чтоб в поля reset и listing присваивались значения из color.properties?" />
              <option name="response" value="" />
              <option name="responseDescription" value="Проблема в том, что аннотация `@Value` не работает с `static` полями. Чтобы исправить это, нужно сделать поля `reset` и `listing` нестатическими и использовать внедрение зависимостей через конструктор или сеттеры. &#10;&#10;Вот как можно изменить класс `BookUtils`:&#10;&#10;1. Уберите `static` модификатор с полей `reset` и `listing`.&#10;2. Сделайте класс `BookUtils` компонентом Spring, чтобы он мог использовать внедрение зависимостей.&#10;3. Внедрите значения из `color.properties` через аннотации `@Value`.&#10;&#10;Измененный код класса `BookUtils`:&#10;&#10;```java&#10;package org.example.utils;&#10;&#10;import lombok.RequiredArgsConstructor;&#10;import org.example.model.Book;&#10;import org.springframework.beans.factory.annotation.Value;&#10;import org.springframework.context.MessageSource;&#10;import org.springframework.stereotype.Component;&#10;&#10;import java.util.List;&#10;import java.util.Locale;&#10;&#10;@Component&#10;@RequiredArgsConstructor&#10;public class BookUtils {&#10;&#10;    @Value(&quot;${color.reset}&quot;)&#10;    private String reset;&#10;&#10;    @Value(&quot;${color.listing}&quot;)&#10;    private String listing;&#10;&#10;    /**&#10;     * Выводит список всех книг.&#10;     *&#10;     * @param books список книг для вывода.&#10;     * @param messageSource источник сообщений для интернационализации.&#10;     * @param currentLocale текущая локаль.&#10;     */&#10;    public void listBooks(List&lt;Book&gt; books, MessageSource messageSource, Locale currentLocale) {&#10;        if (books.isEmpty()) {&#10;            System.out.println(messageSource.getMessage(&quot;service.listBook&quot;, null, currentLocale));&#10;        } else {&#10;            for (Book book : books) {&#10;                System.out.println(&#10;                    listing + messageSource.getMessage(&quot;book.id&quot;, null, currentLocale) + &quot;: &quot; + reset + book.getId() + &quot;, &quot; +&#10;                    listing + messageSource.getMessage(&quot;book.title&quot;, null, currentLocale) + &quot;: &quot; + reset + book.getTitle() + &quot;, &quot; +&#10;                    listing + messageSource.getMessage(&quot;book.author&quot;, null, currentLocale) + &quot;: &quot; + reset + book.getAuthor() + &quot;, &quot; +&#10;                    listing + messageSource.getMessage(&quot;book.description&quot;, null, currentLocale) + &quot;: &quot; + reset + book.getDescription()&#10;                );&#10;            }&#10;        }&#10;    }&#10;}&#10;```&#10;&#10;Также убедитесь, что ваш файл `color.properties` содержит нужные значения:&#10;&#10;```properties&#10;color.reset=\u001B[0m&#10;color.listing=\u001B[34m&#10;```&#10;&#10;Теперь, чтобы использовать `BookUtils` в других частях вашего приложения, вы можете внедрить его через конструктор или поле. Например, в классе `MainMenu`:&#10;&#10;```java&#10;package org.example.controller;&#10;&#10;import lombok.RequiredArgsConstructor;&#10;import org.example.service.BookService;&#10;import org.example.utils.BookUtils;&#10;import org.springframework.context.MessageSource;&#10;import org.springframework.stereotype.Controller;&#10;&#10;import javax.annotation.PostConstruct;&#10;import java.io.BufferedReader;&#10;import java.io.IOException;&#10;import java.io.InputStreamReader;&#10;import java.util.Locale;&#10;&#10;@Controller&#10;@RequiredArgsConstructor&#10;public class MainMenu {&#10;&#10;    private final BookService bookService;&#10;    private final BookInputHandler bookInputHandler;&#10;    private final MessageSource messageSource;&#10;    private final BookUtils bookUtils;&#10;&#10;    private String red;&#10;    private final String reset = &quot;\u001B[0m&quot;;&#10;&#10;    @Value(&quot;${color.green}&quot;)&#10;    private String green;&#10;    private final String yellow = &quot;\u001B[93m&quot;;&#10;&#10;    private Locale currentLocale = Locale.getDefault();&#10;&#10;    @PostConstruct&#10;    private void init() {&#10;        red = StringEscapeUtils.unescapeJava(red);&#10;        green = StringEscapeUtils.unescapeJava(green);&#10;    }&#10;&#10;    public void menu() {&#10;        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) {&#10;            language(reader);&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;    }&#10;&#10;    public void language(BufferedReader reader) {&#10;        int input;&#10;        do {&#10;            System.out.println(green);&#10;            System.out.println(messageSource.getMessage(&quot;menu.language&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.option1&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.option2&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.exit&quot;, null, currentLocale));&#10;            System.out.println(reset);&#10;&#10;            try {&#10;                input = Integer.parseInt(reader.readLine());&#10;                switch (input) {&#10;                    case 1 -&gt; {&#10;                        currentLocale = new Locale(&quot;ru&quot;);&#10;                        run(reader);&#10;                    }&#10;                    case 2 -&gt; {&#10;                        currentLocale = Locale.ENGLISH;&#10;                        run(reader);&#10;                    }&#10;                    case 0 -&gt; System.out.println(messageSource.getMessage(&quot;menu.exitMessage&quot;, null, currentLocale));&#10;                    default -&gt; System.out.println(messageSource.getMessage(&quot;menu.invalid&quot;, null, currentLocale));&#10;                }&#10;            } catch (NumberFormatException e) {&#10;                System.out.println(messageSource.getMessage(&quot;menu.notNumber&quot;, null, currentLocale));&#10;                input = -1;&#10;            } catch (IOException e) {&#10;                throw new RuntimeException(e); //TODO доработать обработку ошибок&#10;            }&#10;        } while (input != 0);&#10;    }&#10;&#10;    public void run(BufferedReader reader) {&#10;        int input;&#10;        do {&#10;            System.out.println(green);&#10;            System.out.println(messageSource.getMessage(&quot;menu.action&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.listBooks&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.createBook&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.editBook&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.deleteBook&quot;, null, currentLocale));&#10;            System.out.println(messageSource.getMessage(&quot;menu.exitAction&quot;, null, currentLocale));&#10;            System.out.println(reset);&#10;&#10;            try {&#10;                input = Integer.parseInt(reader.readLine());&#10;                switch (input) {&#10;                    case 1 -&gt; bookUtils.listBooks(bookService.readBooks(currentLocale), messageSource, currentLocale);&#10;                    case 2 -&gt; bookService.createBook(bookInputHandler.newBookDetails(currentLocale), currentLocale);&#10;                    case 3 -&gt; bookService.editBook(bookInputHandler.updateBookDetails(currentLocale), currentLocale);&#10;                    case 4 -&gt; bookService.deleteBook(bookInputHandler.deleteBookDetails(currentLocale), currentLocale);&#10;                    case 0 -&gt; System.out.println(messageSource.getMessage(&quot;menu.exitMessage&quot;, null, currentLocale));&#10;                    default -&gt;&#10;                            System.out.println(red + messageSource.getMessage(&quot;menu.invalid&quot;, null, currentLocale) + reset);&#10;                }&#10;            } catch (NumberFormatException e) {&#10;                System.out.println(red + messageSource.getMessage(&quot;menu.notNumber&quot;, null, currentLocale) + reset);&#10;                input = -1;&#10;            } catch (IOException e) {&#10;                throw new RuntimeException(e); //TODO доработать обработку ошибок&#10;            }&#10;        } while (input != 0);&#10;    }&#10;}&#10;```&#10;&#10;Теперь значения `reset` и `listing` будут корректно внедрены из файла `color.properties`, и метод `listBooks` будет выводить книги с правильными значениями." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1728994024038" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/src/main/java/org/example/model/Book.java" />
                  <option value="$PROJECT_DIR$/src/main/java/org/example/utils/BookUtils.java" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>